@using DemoApp.Models
@using DemoApp.Models.ViewModels
@using System.Xml.Schema
@model PropertyRendererModel
@{
    var caption = Model.GetCaption(true);
    var elements = XsdUtils.GetXsdChildren(Model.Prop);
    var description = Model.GetDescription();
    bool synligGruppe = !string.IsNullOrEmpty(caption);
    string cssClass = (synligGruppe) ? "synlig_gruppe" : "anonym_gruppe";
    string iterate = (Model.Prop != null) ? XsdUtils.GetAppInfoValue(Model.Prop, "iterer") : "";
    <div class="@cssClass" id="@Model.GetId()">
        @if (synligGruppe)
        {
            <span class="gruppetekst">@caption</span>
            @await Html.PartialAsync($"/Pages/Partial/Beskrivelse.cshtml", description)
        }
        @if (iterate != "")
        {
            var elementModel = new PropertyIteratorRendererModel(Model.Melding, $"{Model.XPath}", Model.Prop ?? throw new Exception("Model=null"), Model.Values, iterate);
            @await Html.PartialAsync($"/Pages/Partial/Iterator.cshtml", elementModel)
        }
        else
        {
            @foreach (var element in elements)
            {
                bool skipRender = Model.SkipProp != null && element is XmlSchemaElement el && el.ElementSchemaType == Model.SkipProp;
                if (!skipRender)
                {
                    <div class="variabel">
                        @{
                            var elementModel = new PropertyRendererModel(Model.Melding, $"{Model.XPath}", element, Model.Values);
                            string controlName = XsdUtils.GetControlNameForProperty(element);
                        }
                        @await Html.PartialAsync($"/Pages/Partial/{controlName}.cshtml", elementModel)
                    </div>
                }
            }
        }
    </div>
}